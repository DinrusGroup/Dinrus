module std.stream;
import cidrus,sys.WinConsts, tpl.stream: Поток, ТПотокМассив;

extern (D)
 class Файл: Поток {
  this();
  this(ук флУк, ПРежимФайла режим) ;
  this(ткст имяф, ПРежимФайла режим = cast(ПФРежим) 1);
  проц открой(ткст имяф, ПРежимФайла режим = cast(ПФРежим) 1) ;
    проц создай(ткст имяф, ПРежимФайла режим) ;
  проц создай(ткст имяф);
  override проц закрой() ;
  ~this();
     бдол размер() ;
  override т_мера читайБлок(ук буфер, т_мера размер) ;
   override т_мера пишиБлок(ук буфер, т_мера размер);
  override бдол сместись(дол смещение, ППозКурсора rel);
  override т_мера доступно() ;
  ук  хэндл() ;

 }
/////////////////////////////////////////
 extern (D) class ФильтрПоток : Поток
 {

   бул закрытьИсток();
    проц закрытьИсток(бул б);
    проц сбросьИсток() ;
    this(Поток исток);
    ~this();
     Поток исток();
    проц исток(Поток п) ;
    т_мера читайБлок(ук буфер, т_мера размер) ;
    override т_мера пишиБлок(ук буфер, т_мера размер);
    override проц закрой() ;
    override бдол сместись(дол смещение, ППозКурсора откуда);
    т_мера доступно ();
    override проц слей();
}

///////////////////////////////

extern (D) class БуфПоток : ФильтрПоток {


    проц устБуфер(ббайт[] буф);
    ббайт[] дайБуфер();
    проц устТекБуфПоз(бцел тбп);
    бцел дайТекБуфПоз();
    проц устДлинуБуф(бцел дб);
    бцел дайДлинуБуф();
    проц устЧерновой(бул чб);
    бул дайЧерновойБуф();
    проц устПозИстокаБуф(бцел пиб);
    бцел дайПозИстокаБуф();
    проц устПозПотока(бдол пп);
    бдол дайПозПотока();

  const бцел дефРазмБуфера = 8192;

  this(Поток исток, бцел размБуф = дефРазмБуфера);
  ~this();
  override проц сбросьИсток();
  override т_мера читайБлок(ук результат, т_мера длин) ;
  override т_мера пишиБлок(ук результат, т_мера длин);
  override бдол сместись(дол смещение, ППозКурсора откуда);
  override ткст читайСтр(ткст вхБуфер) ;
  override шим[] читайСтрШ(шим[] вхБуфер) ;
  override проц слей();
  override бул кф() ;
  override бдол размер() ;
  override т_мера доступно() ;
  override проц закрой();
}

/////////////////////
extern (D) class БуфФайл: БуфПоток {

  this() ;
  ~this();
  this(ткст имяф, ПРежимФайла режим = cast(ПРежимФайла) 1,
       бцел размБуф = дефРазмБуфера);
  this(Файл файл, бцел размБуф = дефРазмБуфера);
  this(ук  файлУк, ПРежимФайла режим, бцел размбуфа);
  проц открой(ткст имяф, ПРежимФайла режим = cast(ПРежимФайла) 1) ;
  проц создай(ткст имяф, ПРежимФайла режим = cast(ПРежимФайла) 6) ;
  проц удали(ткст фимя);
   override проц закрой();

}

extern(D) БуфФайл объБуфФайл();

//////////////////////////////

extern (D) class ПотокЭндианец : ФильтрПоток {

  this(Поток исток, Эндиан end);
  ~this();
  проц устЭндиан(Эндиан э);
  проц выведиЭндиан();
  цел читайМПБ(цел размВозврСим);
   проц фиксируйПБ(ук буфер, бцел размер) ;
   проц фиксируйБлокПБ(ук буфер, бцел размер, т_мера повтор);
  шим бериш() ;
  шим[] читайТкстШ(т_мера length);
  проц пишиМПБ(МПБ b);
  проц пишиТкстШ(шим[] str);
  override бул кф() ;
  override бдол размер();

}

//////////////////

extern(D) class ПотокПамяти: ТПотокМассив!(ббайт[])
 {

  ~this();
  this(ббайт[] буф = null) ;
  this(байт[] буф) ;
  this(ткст буф);
  проц резервируй(т_мера count) ;
  override т_мера пишиБлок(ук буфер, т_мера размер);
 override т_мера читайБлок(ук буфер, т_мера размер) ;
 override бдол сместись(дол смещение, ППозКурсора rel);
 override т_мера доступно () ;
 override ббайт[] данные() ;
 override ткст вТкст();
}

//////////////////////////

extern (D) class РПФайлПоток : ТПотокМассив!(РПФайл) {

  this(РПФайл файл) ;
  ~this();
  override проц слей() ;
  override проц закрой();
override  т_мера читайБлок(ук буфер, т_мера размер);
 override т_мера пишиБлок(ук буфер, т_мера размер);
 override бдол сместись(дол смещение, ППозКурсора rel);
 override т_мера доступно ();
 override ббайт[] данные();
 override ткст вТкст();
  override проц удали(ткст фимя);
}

/////////////////////////////////////

extern (D) class ПотокСрез : ФильтрПоток {

  this (Поток п, бдол нз);
  ~this();
  this (Поток п, бдол нз, бдол вх);
  override т_мера читайБлок (ук буфер, т_мера размер) ;
  override т_мера пишиБлок (ук буфер, т_мера размер) ;
  override бдол сместись(дол смещение, ППозКурсора rel);
  override т_мера доступно ();

}

/////////////////////////


 extern(D) class РПФайл
{

alias длина length;

    enum Режим
    {
  Чтение,   /// read existing file
  ЧтенЗапНов, /// delete existing file, write new file
  ЧтенЗап,  /// read/write existing file, создай if not existing
  ЧтенКопирПриЗап, /// read/write existing file, copy on write

    }

    this(ткст имяф);
    this(ткст имяф, Режим режим, бдол размер, ук адрес,
      т_мера окно = 0);
  ~this();
  проц слей();
  бдол длина();
  Режим режим();
  проц[] opSlice();
  проц[] opSlice(бдол i1, бдол i2);
  ббайт opIndex(бдол i);
  ббайт opIndexAssign(ббайт значение, бдол i);
}
////////////////////////////

extern(D) class СФайл : Поток {

  this(фук файлси, ПРежимФайла режим, бул сканируем = false) ;
  ~this() ;
  фук файл() ;
  проц файл(фук файлси) ;
  override проц слей() ;
  override проц закрой();
  override бул кф() ;
  override сим берис() ;
  override сим отдайс(сим c);
  override т_мера читайБлок(ук буфер, т_мера размер);
  override т_мера пишиБлок(ук буфер, т_мера размер);
  override бдол сместись(дол смещение, ППозКурсора rel);
  override проц пишиСтр(сим[] т) ;
  override проц пишиСтрШ(шим[] т);
}
