/*******************************************************************************

        copyright:      Copyright (c) 2004 Kris Bell. все rights reserved

        license:        BSD стиль: $(LICENSE)
      
        version:        Initial release: May 2004
        
        author:         Kris

*******************************************************************************/

module util.log.AppendFiles;

private import  time.Time;

private import  Путь = io.Path,
                io.device.File;

private import  io.model.IFile;

private import  util.log.Log,
                util.log.AppendFile;

/*******************************************************************************

        Append лог messages в_ a файл установи 

*******************************************************************************/

public class ДобВФайлы : Файлер
{
        private маска            mask_;
        private ткст[]        пути;
        private цел             индекс;
        private дол            maxSize,
                                размерФайла;

        /***********************************************************************
                
                Create an ДобВФайлы upon a файл-установи with the specified 
                путь and optional выкладка. The minimal файл счёт is two 
                and the maximum is 1000 (explicitly 999). Note that файлы
                are numbered starting with zero rather than one.

                Where a файл установи already есть_ли, we resume appending в_ 
                the one with the most recent activity timestamp

        ***********************************************************************/

        this (ткст путь, цел счёт, дол maxSize, Добавщик.Выкладка как = пусто)
        {
                --счёт;
                assert (путь);
                assert (счёт > 0 && счёт < 1000);

                // Get a unique fingerprint for this экземпляр
                mask_ = регистрируй (путь);

                // разбей the путь преобр_в components
                auto c = Путь.разбор (путь);

                сим[3] x;
                Время mostRecent;
                for (цел i=0; i <= счёт; ++i)
                    {
                    x[0] = cast(сим)('0' + i/100);
                    x[1] = cast(сим)('0' + i/10%10);
                    x[2] = cast(сим)('0' + i%10);
                    auto p = c.вТкст[0..$-c.суффикс.length] ~ x ~ c.суффикс;
                    пути ~= p;

                    // use the most recent файл in the установи
                    if (Путь.есть_ли(p))
                       {
                       auto изменён = Путь.изменён(p);
                       if (изменён > mostRecent)
                          {
                          mostRecent = изменён;
                          индекс = i;
                          }
                       }
                    }

                // remember the maximum размер 
                this.maxSize = maxSize;

                // исправь индекс and открой the appropriate лог файл
                --индекс; 
                следщФайл (нет);

                // установи provопрed выкладка (ignored when пусто)
                выкладка (как);
        }

        /***********************************************************************
                
                Возвращает фингерпринт для данного класса

        ***********************************************************************/

        final Маска маска ()
        {
                return mask_;
        }

        /***********************************************************************
                
                Вернуть имя данного класса

        ***********************************************************************/

        final ткст имя ()
        {
                return this.classinfo.имя;
        }

        /***********************************************************************
                
                Append an событие в_ the вывод
                 
        ***********************************************************************/

        final synchronized проц добавь (СобытиеЛога событие)
        {
                ткст сооб;

                // файл already full?
                if (размерФайла >= maxSize)
                    следщФайл (да);

                т_мера пиши (проц[] контент)
                {
                        размерФайла += контент.length;
                        return буфер.пиши (контент);
                }

                // пиши лог сообщение and слей it
                выкладка.форматируй (событие, &пиши);
                пиши (ФайлКонст.НовСтрЗнак);
                буфер.слей; 
        }

        /***********************************************************************
                
                Switch в_ the следщ файл within the установи

        ***********************************************************************/

        private проц следщФайл (бул сбрось)
        {
                // выбери следщ файл in the установи
                if (++индекс >= пути.length)
                    индекс = 0;
                
                // закрой any existing провод
                закрой;

                // сделай it shareable for читай
                auto стиль = Файл.ЧитДоб;
                стиль.совместно = Файл.Коммуна.Чтен;
                auto провод = new Файл (пути[индекс], стиль);

                конфигурируй (провод);

                // сбрось файл размер
                if (сбрось)
                    провод.обрежь (размерФайла = 0);
                else
                   размерФайла = провод.length;
        }
}

/*******************************************************************************

*******************************************************************************/

debug (ДобВФайлы)
{
        проц main()
        {
                Журнал.корень.добавь (new ДобВФайлы ("foo", 5, 6));
                auto лог = Журнал.отыщи ("fu.bar");
                лог.след ("hello {}", "world");
                лог.след ("hello {}", "world");
                лог.след ("hello {}", "world");
                лог.след ("hello {}", "world");
                лог.след ("hello {}", "world");
                лог.след ("hello {}", "world");
                лог.след ("hello {}", "world");
                лог.след ("hello {}", "world");
                лог.след ("hello {}", "world");
                лог.след ("hello {}", "world");
                лог.след ("hello {}", "world");
                лог.след ("hello {}", "world");
                лог.след ("hello {}", "world");
                лог.след ("hello {}", "world");
                лог.след ("hello {}", "world");
                лог.след ("hello {}", "world");

        }
}
