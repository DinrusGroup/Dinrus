/*******************************************************************************

        copyright:      Copyright (c) 2004 Kris Bell. все rights reserved

        license:        BSD стиль: $(LICENSE)
        
        version:        Initial release: April 2004      
        
        author:         Kris

*******************************************************************************/

module net.http.HttpParams;

private import  time.Time;

private import  io.model;

private import  net.http.HttpTokens;

private import  io.stream.Delimiters;

public  import  net.http.model.HttpParamsView;

/******************************************************************************

        Maintains a установи of запрос параметры, разобрано из_ an HTTP request.
        Use ПараметрыППГТ instead for вывод параметры.

        Note that these ввод params may have been кодирован by the пользователь-
        agent. Unfortunately there есть been little consensus on what that
        кодировка should be (especially regarding GET запрос-params). With
        luck, that will change в_ a consistent usage of UTF-8 within the 
        near future.

******************************************************************************/

class ПараметрыППГТ : ТокеныППГТ, ОбзорПараметровППГТ
{
        // tell compiler в_ expose super.разбор() also
        alias ТокеныППГТ.разбор разбор;

        private Разграничители!(сим) amp;

        /**********************************************************************
                
                Construct параметры by telling the HttpStack that
                имя/значение pairs are seperated by a '=' character.

        **********************************************************************/

        this ()
        {
                super ('=');

                // construct a строка tokenizer for later usage
                amp = new Разграничители!(сим) ("&");
        }

        /**********************************************************************

                Return the число of заголовки

        **********************************************************************/

        бцел размер ()
        {
                return super.stack.размер;
        }

        /**********************************************************************
                
                Чтен все запрос параметры. Everything is mapped rather 
                than being allocated & copied

        **********************************************************************/

        проц разбор (БуферВвода ввод)
        {
                установиРазобран (да);
                amp.установи (ввод);

                while (amp.следщ || amp.получи.length)
                       stack.сунь (amp.получи);
        }

        /**********************************************************************
                
                Добавь a имя/значение pair в_ the запрос список

        **********************************************************************/

        проц добавь (ткст имя, ткст значение)
        {
                super.добавь (имя, значение);
        }

        /**********************************************************************
                
                Добавь a имя/целое pair в_ the запрос список 

        **********************************************************************/

        проц добавьInt (ткст имя, цел значение)
        {
                super.добавьInt (имя, значение);
        }


        /**********************************************************************
                
                Добавь a имя/дата(дол) pair в_ the запрос список

        **********************************************************************/

        проц добавьДату (ткст имя, Время значение)
        {
                super.добавьДату (имя, значение);
        }

        /**********************************************************************
                
                Return the значение of the provопрed заголовок, or пусто if the
                заголовок does not exist

        **********************************************************************/

        ткст получи (ткст имя, ткст ret = пусто)
        {
                return super.получи (имя, ret);
        }

        /**********************************************************************
                
                Return the целое значение of the provопрed заголовок, or the 
                provопрed default-значение if the заголовок does not exist

        **********************************************************************/

        цел получиЦел (ткст имя, цел ret = -1)
        {
                return super.получиЦел (имя, ret);
        }

        /**********************************************************************
                
                Return the дата значение of the provопрed заголовок, or the 
                provопрed default-значение if the заголовок does not exist

        **********************************************************************/

        Время дайДату (ткст имя, Время ret = Время.эпоха)
        {
                return super.дайДату (имя, ret);
        }


        /**********************************************************************

                Вывод the param список в_ the provопрed consumer

        **********************************************************************/

        проц произведи (т_мера delegate(проц[]) используй, ткст кс=пусто)
        {
                return super.произведи (используй, кс);
        }
}
