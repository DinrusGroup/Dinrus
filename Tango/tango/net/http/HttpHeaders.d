/*******************************************************************************

        copyright:      Copyright (c) 2004 Kris Bell. все rights reserved

        license:        BSD стиль: $(LICENSE)
        
        version:        Initial release: April 2004      
        
        author:         Kris

*******************************************************************************/

module net.http.HttpHeaders;

private import  time.Time;

private import  io.stream.Lines;

private import  io.model;

public  import  net.http.HttpConst;

private import  net.http.HttpTokens;

/******************************************************************************

        Exposes freachable ЗаголовокППГТ instances 

******************************************************************************/

struct ЭлементЗаголовка
{
        ИмяЗаголовкаППГТ  имя;
        ткст          значение;
}

/******************************************************************************

        Maintains a установи of ввод заголовки. These are placed преобр_в an ввод
        буфер and indexed via a HttpStack. 

******************************************************************************/

class ОбзорЗаголовковППГТ : ТокеныППГТ
{
        // tell compiler в_ used super.разбор() also
        alias ТокеныППГТ.разбор разбор;

        private Строки!(сим) строка;
        private бул         preserve;

        /**********************************************************************
                
                Construct this установи of заголовки, using a HttpStack based
                upon a ':' delimiter   
              
        **********************************************************************/

        this ()
        {
                // разделитель is a ':', and specify we want it included as
                // часть of the имя whilst iterating
                super (':', да);
        
                // construct a строка tokenizer for later usage
                строка = new Строки!(сим);
        }

        /**********************************************************************
                
                Clone a источник установи of ЗаголовкиППГТ

        **********************************************************************/

        this (ОбзорЗаголовковППГТ источник)
        {
                super (источник);
                this.preserve = источник.preserve;
        }

        /**********************************************************************
                
                Clone this установи of ОбзорЗаголовковППГТ

        **********************************************************************/

        ОбзорЗаголовковППГТ clone ()
        {
                return new ОбзорЗаголовковППГТ (this);
        }

        /***********************************************************************

                Control whether заголовки are duplicated or not. Default 
                behaviour is aliasing instead of copying, avoопрing any
                allocatation overhead. However, the default won't preserve
                those заголовки once добавьitional контент есть been читай.

                To retain заголовки across arbitrary buffering, you should 
                установи this опция да

        ***********************************************************************/

        ОбзорЗаголовковППГТ retain (бул да = да)
        {
                preserve = да;
                return this;
        }

        /**********************************************************************
                
                Чтен все заголовок lines. Everything is mapped rather 
                than being allocated & copied

        **********************************************************************/

        override проц разбор (БуферВвода ввод)
        {
                установиРазобран (да);
                строка.установи (ввод);

                while (строка.следщ && строка.получи.length)
                       stack.сунь (preserve ? строка.получи.dup : строка.получи);
        }

        /**********************************************************************
                
                Return the значение of the provопрed заголовок, or пусто if the
                заголовок does not exist

        **********************************************************************/

        ткст получи (ИмяЗаголовкаППГТ имя, ткст def = пусто)
        {
                return super.получи (имя.значение, def);
        }

        /**********************************************************************
                
                Return the целое значение of the provопрed заголовок, or -1 
                if the заголовок does not exist

        **********************************************************************/

        цел получиЦел (ИмяЗаголовкаППГТ имя, цел def = -1)
        {
                return super.получиЦел (имя.значение, def);
        }

        /**********************************************************************
                
                Return the дата значение of the provопрed заголовок, or Время.эпоха 
                if the заголовок does not exist

        **********************************************************************/

        Время дайДату (ИмяЗаголовкаППГТ имя, Время def = Время.эпоха)
        {
                return super.дайДату (имя.значение, def);
        }

        /**********************************************************************

                Iterate over the установи of заголовки. This is a shell around
                the superclass, where we can преобразуй the ТокенППГТ преобр_в 
                a ЭлементЗаголовка instead.

        **********************************************************************/

        цел opApply (цел delegate(ref ЭлементЗаголовка) дг)
        {
                ЭлементЗаголовка   element;
                цел             результат = 0;

                foreach (ТокенППГТ token; super)
                        {
                        element.имя.значение = token.имя;
                        element.значение = token.значение;
                        результат = дг (element);
                        if (результат)
                            break;
                        }
                return результат;
        }

        /**********************************************************************

                Create a фильтр for iterating of a установи of named заголовки.
                We have в_ создай a фильтр since we can't пароль добавьitional
                аргументы directly в_ an opApply() метод.

        **********************************************************************/

        ФильтрованныеЗаголовки создайФильтр (ИмяЗаголовкаППГТ заголовок)
        {
                return new ФильтрованныеЗаголовки (this, заголовок);
        }

        /**********************************************************************

                Фильтр class for isolating a установи of named заголовки.

        **********************************************************************/

        private static class ФильтрованныеЗаголовки : ФильтрованныеТокены
        {       
                /**************************************************************

                        Construct a фильтр upon the specified заголовки, for
                        the given заголовок имя.

                **************************************************************/

                this (ОбзорЗаголовковППГТ заголовки, ИмяЗаголовкаППГТ заголовок)
                {
                        super (заголовки, заголовок.значение);
                }

                /**************************************************************

                        Iterate over все заголовки matching the given имя. 
                        This wraps the ТокенППГТ iterator в_ преобразуй the 
                        вывод преобр_в a ЭлементЗаголовка instead.

                **************************************************************/

                цел opApply (цел delegate(ref ЭлементЗаголовка) дг)
                {
                        ЭлементЗаголовка   element;
                        цел             результат = 0;
                        
                        foreach (ТокенППГТ token; super)
                                {
                                element.имя.значение = token.имя;
                                element.значение = token.значение;
                                результат = дг (element);
                                if (результат)
                                    break;
                                }
                        return результат;
                }

        }
}


/******************************************************************************

        Maintains a установи of вывод заголовки. These are held in an вывод
        буфер, and indexed via a HttpStack. Deleting a заголовок could be 
        supported by настройка the HttpStack Запись в_ пусто, and ignoring
        such values when it's время в_ пиши the заголовки.

******************************************************************************/

class ЗаголовкиППГТ : ОбзорЗаголовковППГТ
{
        /**********************************************************************
                
                Construct вывод заголовки

        **********************************************************************/

        this ()
        {
        }

        /**********************************************************************
                
                Clone a источник установи of ЗаголовкиППГТ

        **********************************************************************/

        this (ЗаголовкиППГТ источник)
        {
                super (источник);
        }

        /**********************************************************************
                
                Clone this установи of ЗаголовкиППГТ

        **********************************************************************/

        ЗаголовкиППГТ clone ()
        {
                return new ЗаголовкиППГТ (this);
        }

        /**********************************************************************
                
                Добавь the specified заголовок, and use a обрвызов в_ provопрe
                the контент.

        **********************************************************************/

        проц добавь (ИмяЗаголовкаППГТ имя, проц delegate(БуферВывода) дг)
        {
                super.добавь (имя.значение, дг);
        }

        /**********************************************************************
                
                Добавь the specified заголовок and текст 

        **********************************************************************/

        проц добавь (ИмяЗаголовкаППГТ имя, ткст значение)
        {
                super.добавь (имя.значение, значение);
        }

        /**********************************************************************
                
                Добавь the specified заголовок and целое значение

        **********************************************************************/

        проц добавьInt (ИмяЗаголовкаППГТ имя, цел значение)
        {
                super.добавьInt (имя.значение, значение);
        }

        /**********************************************************************
                
                Добавь the specified заголовок and дол/дата значение

        **********************************************************************/

        проц добавьДату (ИмяЗаголовкаППГТ имя, Время значение)
        {
                super.добавьДату (имя.значение, значение);
        }

        /**********************************************************************
                
                Удали the specified заголовок заголовок. Returns нет if not 
                найдено.

        **********************************************************************/

        бул удали (ИмяЗаголовкаППГТ имя)
        {
                return super.удали (имя.значение);
        }
}
