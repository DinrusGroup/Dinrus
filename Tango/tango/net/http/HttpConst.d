/*******************************************************************************

        copyright:      Copyright (c) 2004 Kris Bell. все rights reserved

        license:        BSD стиль: $(LICENSE)
        
        version:        Initial release: April 2004      
        
        author:         Kris

*******************************************************************************/

module net.http.HttpConst;

/*******************************************************************************

        Constants

*******************************************************************************/

struct КонстППГТ
{
        const ткст Кс = "\r\n";
}

/*******************************************************************************

        Заголовки are distinct типы in their own right. This is because they
        are somewhat optimized via a trailing ':' character.

*******************************************************************************/

struct ИмяЗаголовкаППГТ
{
        final ткст значение;  
}

/*******************************************************************************

        Define the traditional установи of HTTP заголовок names
        
*******************************************************************************/

struct ЗаголовокППГТ
{   
        // размер of Всё the request & ответ буфер (per нить)
        const цел IOBufferSize                 = 16 * 1024;

        // maximum length for POST параметры (в_ avoопр DOS ...)
        const цел MaxPostParamSize             = 4 * 1024;

        const ИмяЗаголовкаППГТ Версия           = {"HTTP/1.1"};
        const ИмяЗаголовкаППГТ ТекстППГТ          = {"текст/html"};

        const ИмяЗаголовкаППГТ Акцепт            = {"Акцепт:"};
        const ИмяЗаголовкаППГТ ПринятьГарнитуру     = {"Акцепт-Charset:"};
        const ИмяЗаголовкаППГТ ПринятьКодировку    = {"Акцепт-Кодировка:"};
        const ИмяЗаголовкаППГТ ПринятьЯзык    = {"Акцепт-Language:"};
        const ИмяЗаголовкаППГТ ПринятьДиапазоны      = {"Акцепт-Ranges:"};
        const ИмяЗаголовкаППГТ Возраст               = {"Возраст:"};
        const ИмяЗаголовкаППГТ Разрешить             = {"Разрешить:"};
        const ИмяЗаголовкаППГТ Авторизация     = {"Авторизация:"};
        const ИмяЗаголовкаППГТ КонтрольКэша      = {"Cache-Control:"};
        const ИмяЗаголовкаППГТ Подключение        = {"Подключение:"};
        const ИмяЗаголовкаППГТ КодировкаКонтента   = {"Content-Кодировка:"};
        const ИмяЗаголовкаППГТ ЯзыкКонтента   = {"Content-Language:"};
        const ИмяЗаголовкаППГТ ДлинаКонтента     = {"Content-Length:"};
        const ИмяЗаголовкаППГТ РасположениеКонтента   = {"Content-Местоположение:"};
        const ИмяЗаголовкаППГТ ДиапазонКонтента      = {"Content-Диапазон:"};
        const ИмяЗаголовкаППГТ ТипКонтента       = {"Content-Type:"};
        const ИмяЗаголовкаППГТ Куки            = {"Куки:"};
        const ИмяЗаголовкаППГТ Date              = {"Date:"};
        const ИмяЗаголовкаППГТ ИТэг              = {"ИТэг:"};
        const ИмяЗаголовкаППГТ Икспект            = {"Икспект:"};
        const ИмяЗаголовкаППГТ ДействительноДо           = {"ДействительноДо:"};
        const ИмяЗаголовкаППГТ ОтКого              = {"ОтКого:"};
        const ИмяЗаголовкаППГТ Хост              = {"Хост:"};
        const ИмяЗаголовкаППГТ Идентичность          = {"Идентичность:"};
        const ИмяЗаголовкаППГТ ЕслиСовпадает           = {"If-Match:"};
        const ИмяЗаголовкаППГТ ЕслиИзмененоС   = {"If-Modified-Since:"};
        const ИмяЗаголовкаППГТ ЕслиНетСовпадения       = {"If-Нет-Match:"};
        const ИмяЗаголовкаППГТ ЕслиДиапазон           = {"If-Диапазон:"};
        const ИмяЗаголовкаППГТ ЕслиНеИзмененоС = {"If-Unmodified-Since:"};
        const ИмяЗаголовкаППГТ БудьНаСвязи         = {"Keep-Alive:"};
        const ИмяЗаголовкаППГТ ПоследнееИзменение      = {"Last-Modified:"};
        const ИмяЗаголовкаППГТ Местоположение          = {"Местоположение:"};
        const ИмяЗаголовкаППГТ МаксФорвардз       = {"Max-Forwards:"};
        const ИмяЗаголовкаППГТ ВерсияМайм       = {"MIME-Версия:"};
        const ИмяЗаголовкаППГТ Прагма            = {"Прагма:"};
        const ИмяЗаголовкаППГТ АутентифицируйПрокси = {"Proxy-Authenticate:"};
        const ИмяЗаголовкаППГТ ПроксиПодключение   = {"Proxy-Подключение:"};
        const ИмяЗаголовкаППГТ Диапазон             = {"Диапазон:"};
        const ИмяЗаголовкаППГТ Рефер          = {"Referer:"};
        const ИмяЗаголовкаППГТ ПопробуйПозже        = {"Retry-After:"};
        const ИмяЗаголовкаППГТ Сервер            = {"Сервер:"};
        const ИмяЗаголовкаППГТ ДвигСервлетов     = {"Servlet-Engine:"};
        const ИмяЗаголовкаППГТ УстановитьКуки         = {"Набор-Куки:"};
        const ИмяЗаголовкаППГТ УстановитьКуки2        = {"Набор-Cookie2:"};
        const ИмяЗаголовкаППГТ ТиИ                = {"ТиИ:"};
        const ИмяЗаголовкаППГТ Трейлер           = {"Трейлер:"};
        const ИмяЗаголовкаППГТ КодировкаТрансфера  = {"Transfer-Кодировка:"};
        const ИмяЗаголовкаППГТ Апгрейд           = {"Апгрейд:"};
        const ИмяЗаголовкаППГТ ЮзерАгент         = {"User-Agent:"};
        const ИмяЗаголовкаППГТ Варьируй              = {"Варьируй:"};
        const ИмяЗаголовкаППГТ Предупреждение           = {"Предупреждение:"};
        const ИмяЗаголовкаППГТ АутентифицируйВВВ   = {"WWW-Authenticate:"};
}


/*******************************************************************************

        Declare the traditional установи of HTTP ответ codes

*******************************************************************************/

enum КодОтветаППГТ
{       
        Продолжение                     = 100,
        ПереключениеПротоколов           = 101,
        ОК                           = 200,
        Создано                      = 201,
        Принято                     = 202,
        НеАвторитативнаяИнформация  = 203,
        НетКонтента                    = 204,
        СброситьКонтекст                 = 205,
        ЧастичныйКонтент               = 206,
        НесколькоВыборов              = 300,
        УдаленоНавсегда             = 301,
        Найдено                        = 302,
        СмотриИное                     = 303,
        НеИзменено                  = 304,
        ИспользоватьПрокси                     = 305,
        ВременноеПеренаправление            = 307,
        ПлохойЗапрос                   = 400,
        Неавторизовано                 = 401,
        ТребуетсяОплата              = 402,
        Запрещено                    = 403,
        НеНайдено                     = 404,
        МетодНедозволен             = 405,
        Неприемлемо                = 406,
        ТребуетсяАутентикацияПрокси  = 407,
        ТаймаутЗапроса               = 408,
        Конфликт                     = 409,
        Ушло                         = 410,
        ТребуетсяДлина               = 411,
        ПредусловиеНеудовлетворено           = 412,
        СлишкомБольшойЗапрос        = 413,
        СлишкомБольшойУИРЗапроса           = 414,
        НеподдерживаемыйТипМедиа         = 415,
        ЗапрошенныйДиапазонНеУдовлетворителен = 416,
        ОжиданиеНапрасно            = 417,
        ВнутренняяОшибкаСервера          = 500,
        НеРеализовано               = 501,
        ПлохойГейтуэй                   = 502,
        СлужбаНедоступна           = 503,
        ГейуэйТаймаут               = 504,
        ВерсияНеПоддерживается          = 505,
};

/*******************************************************************************

        Status is a compound тип, with a имя and a код.

*******************************************************************************/

struct СтатусППГТ
{
        final цел     код; 
        final ткст  имя;  
}

/*******************************************************************************

        Declare the traditional установи of HTTP responses

*******************************************************************************/

struct ОтветыППГТ
{       
        static СтатусППГТ Продолжение                     = {КодОтветаППГТ.Продолжение, "Продолжение"};
        static СтатусППГТ ПереключениеПротоколов           = {КодОтветаППГТ.ПереключениеПротоколов, "ПереключениеПротоколов"};
        static СтатусППГТ ОК                           = {КодОтветаППГТ.ОК, "ОК"};
        static СтатусППГТ Создано                      = {КодОтветаППГТ.Создано, "Создано"};
        static СтатусППГТ Принято                     = {КодОтветаППГТ.Принято, "Принято"};
        static СтатусППГТ НеАвторитативнаяИнформация  = {КодОтветаППГТ.НеАвторитативнаяИнформация, "НеАвторитативнаяИнформация"};
        static СтатусППГТ НетКонтента                    = {КодОтветаППГТ.НетКонтента, "НетКонтента"};
        static СтатусППГТ СброситьКонтекст                 = {КодОтветаППГТ.СброситьКонтекст, "СброситьКонтекст"};
        static СтатусППГТ ЧастичныйКонтент               = {КодОтветаППГТ.ЧастичныйКонтент, "ЧастичныйКонтент"};
        static СтатусППГТ НесколькоВыборов              = {КодОтветаППГТ.НесколькоВыборов, "НесколькоВыборов"};
        static СтатусППГТ УдаленоНавсегда             = {КодОтветаППГТ.УдаленоНавсегда, "УдаленоНавсегда"};
        static СтатусППГТ Найдено                        = {КодОтветаППГТ.Найдено, "Найдено"};
        static СтатусППГТ ВременноеПеренаправление            = {КодОтветаППГТ.ВременноеПеренаправление, "ВременноеПеренаправление"};
        static СтатусППГТ СмотриИное                     = {КодОтветаППГТ.СмотриИное, "СмотриИное"};
        static СтатусППГТ НеИзменено                  = {КодОтветаППГТ.НеИзменено, "НеИзменено"};
        static СтатусППГТ ИспользоватьПрокси                     = {КодОтветаППГТ.ИспользоватьПрокси, "ИспользоватьПрокси"};
        static СтатусППГТ ПлохойЗапрос                   = {КодОтветаППГТ.ПлохойЗапрос, "ПлохойЗапрос"};
        static СтатусППГТ Неавторизовано                 = {КодОтветаППГТ.Неавторизовано, "Неавторизовано"};
        static СтатусППГТ ТребуетсяОплата              = {КодОтветаППГТ.ТребуетсяОплата, "ТребуетсяОплата"};
        static СтатусППГТ Запрещено                    = {КодОтветаППГТ.Запрещено, "Запрещено"};
        static СтатусППГТ НеНайдено                     = {КодОтветаППГТ.НеНайдено, "НеНайдено"};
        static СтатусППГТ МетодНедозволен             = {КодОтветаППГТ.МетодНедозволен, "МетодНедозволен"};
        static СтатусППГТ Неприемлемо                = {КодОтветаППГТ.Неприемлемо, "Неприемлемо"};
        static СтатусППГТ ТребуетсяАутентикацияПрокси  = {КодОтветаППГТ.ТребуетсяАутентикацияПрокси, "ТребуетсяАутентикацияПрокси"};
        static СтатусППГТ ТаймаутЗапроса               = {КодОтветаППГТ.ТаймаутЗапроса, "ТаймаутЗапроса"};
        static СтатусППГТ Конфликт                     = {КодОтветаППГТ.Конфликт, "Конфликт"};
        static СтатусППГТ Ушло                         = {КодОтветаППГТ.Ушло, "Ушло"};
        static СтатусППГТ ТребуетсяДлина               = {КодОтветаППГТ.ТребуетсяДлина, "ТребуетсяДлина"};
        static СтатусППГТ ПредусловиеНеудовлетворено           = {КодОтветаППГТ.ПредусловиеНеудовлетворено, "ПредусловиеНеудовлетворено"};
        static СтатусППГТ СлишкомБольшойЗапрос        = {КодОтветаППГТ.СлишкомБольшойЗапрос, "СлишкомБольшойЗапрос"};
        static СтатусППГТ СлишкомБольшойУИРЗапроса           = {КодОтветаППГТ.СлишкомБольшойУИРЗапроса, "СлишкомБольшойУИРЗапроса"};
        static СтатусППГТ НеподдерживаемыйТипМедиа         = {КодОтветаППГТ.НеподдерживаемыйТипМедиа, "НеподдерживаемыйТипМедиа"};
        static СтатусППГТ ЗапрошенныйДиапазонНеУдовлетворителен = {КодОтветаППГТ.ЗапрошенныйДиапазонНеУдовлетворителен, "ЗапрошенныйДиапазонНеУдовлетворителен"};
        static СтатусППГТ ОжиданиеНапрасно            = {КодОтветаППГТ.ОжиданиеНапрасно, "ОжиданиеНапрасно"};
        static СтатусППГТ ВнутренняяОшибкаСервера          = {КодОтветаППГТ.ВнутренняяОшибкаСервера, "ВнутренняяОшибкаСервера"};
        static СтатусППГТ НеРеализовано               = {КодОтветаППГТ.НеРеализовано, "НеРеализовано"};
        static СтатусППГТ ПлохойГейтуэй                   = {КодОтветаППГТ.ПлохойГейтуэй, "ПлохойГейтуэй"};
        static СтатусППГТ СлужбаНедоступна           = {КодОтветаППГТ.СлужбаНедоступна, "СлужбаНедоступна"};
        static СтатусППГТ ГейуэйТаймаут               = {КодОтветаППГТ.ГейуэйТаймаут, "ГейуэйТаймаут"};
        static СтатусППГТ ВерсияНеПоддерживается          = {КодОтветаППГТ.ВерсияНеПоддерживается, "ВерсияНеПоддерживается"};
}
