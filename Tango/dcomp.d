module dcomp;


public import dinrus, util.str, util.fileex;

alias дайСред дайГлоб;
alias устСред устГлоб;
alias разверниПеремСреды раскройГлоб;
alias создайТекстФайл запиши_в;
alias дайТекст читай_из;
alias дайТекстПострочно читайвсестр_из;

	цел компилируйПакет(ткст путь, ткст англИмяСтатБиб = "myLib")
	{
	 цел компилировано = 0;
	 
	 if(естьФайл(фм(путь~"\\*.obj"))) сис(фм("del "~путь~"\\*.obj"));	
	 скажифнс("\nНАЧАЛО ОБРАБОТКИ ИСХОДНИКОВ ПО АДРЕСУ "~путь);
	scope файлы = списпап(путь, "*.d"); 
		 foreach (ф; файлы)
		 {
			сис("dmd -c "~ф);	
			скажифнс("Модуль:"~ф);
			компилировано++;
		 }
		 
		 if(англИмяСтатБиб !=" ")
		 {
		 сис("ls2 -d .\\*.obj>>.\\objs.rsp");	
		 сис(раскройГлоб("%DINRUS%\\lib -p128 .\\"~англИмяСтатБиб~".lib @objs.rsp"));			 
		 скажифнс("Статическая библиотека "~англИмяСтатБиб~".lib");
		 сис("del *.obj *.rsp");
		 }
		 скажифнс("\n\tВсего обработано %d модулей", компилировано);
		 return 0;
	}

	цел удалиФайлы(ткст путь, ткст флрасш)
	 { 
	 цел удалено = 0;

	скажинс("Подождите пока строится список файлов => "~флрасш);
	нс;
		auto файлы = списпап(путь, флрасш);
		foreach (ф; файлы)
		{	try
			{
			удалиФайл(ф);
			удалено++;
			}
			catch(ВВИскл искл){throw искл;}
			скажинс("Удалён : "~ф);		
		}
		нс;
		скажи("Файлов удалено: "); пишифнс("%d", удалено);
		нс;
		return 0;
	}

	цел импортируйБиблиотеки( ткст откуда =".")
	 { 
	 цел импортировано = 0;

	скажинс("Подождите пока строится список библиотек => ");
	нс;
		auto файлы = списпап(откуда, "*.dll");
		foreach (ф; файлы)
		{	try
			{
			сис(фм("implib/system "~ф~".lib .\\"~ф));
			импортировано++;
			}
			catch(ВВИскл искл){искл.выведи();}
			скажинс("Импортирован : "~ф);		
		}
		нс;
		скажи("Файлов импортировано: "); пишифнс("%d", импортировано);
		нс;
		return 0;
	}

	проц зачисть(ткст путь = ".")
	{
		скажинс("Начало послепостроечной очистки: ");
		удалиФайлы(путь, "*.obj");
		удалиФайлы(путь, "*.map");
		удалиФайлы(путь, "*.bak");
		удалиФайлы(путь, "*.rsp");
		удалиФайлы(путь, "*.ksp");	
		скажинс("Все файлы  в текущей/указанной папке \n  полностью и безвозвратно удалены.");
		нс;
	}

alias пауза пз;

проц сбрось(){
сис("cls");
}
цел Тангио(){
компилируйПакет(".\\wdir\\io", "tangio");
инфо("IO пакет обработан");
сбрось();
return 0;}

цел Текст(){
компилируйПакет(".\\wdir\\text", "text");
инфо("Текст пакет обработан");
сбрось();
return 0;}

цел Сис(){
компилируйПакет(".\\wdir\\sys", "sys");
инфо("Sys пакет обработан");
сбрось();
return 0;}

цел Нет(){
компилируйПакет(".\\wdir\\net", "net");
инфо("Net пакет обработан");
сбрось();
return 0;}

цел Мат(){
компилируйПакет(".\\wdir\\math", "math");
инфо("Math пакет обработан");
сбрось();
return 0;}


цел Время(){
компилируйПакет(".\\wdir\\time", "time");
инфо("Time пакет обработан");
сбрось();
return 0;}

цел Ядро(){
компилируйПакет(".\\wdir\\core", "core");
инфо("Core пакет обработан");
сбрось();
return 0;}

цел Утил(){
компилируйПакет(".\\wdir\\util", "util");
инфо("Util пакет обработан");
сбрось();
return 0;}

//Функция должна соединить полученные промежуточно библиотеки в одну,
//результирующую (Dinrus.lib)
цел объединиБиблиотеки(ткст имяНовБиблиотеки)
{
return 0;
}


проц main(){
/+
scope файлы = списпап(раскройГлоб("%DINRUS%\\..\\dev\\Dinrus\\Dinrus\\import"), "*.d"); 
скажи("Копирование импортов");

 foreach (ф; файлы)
		 {
			копируйФайл(ф, раскройГлоб("%DINRUS%\\..\\imp\\dinrus"));	
			скажифнс("Скопирован:"~ф);
			компилировано++;
		 }
пз;
+/
скажинс("Начало компиляции пакетов Dinrus");
Ядро();
Мат();
Сис();
Тангио();
Текст();
Утил();
Время();
Нет();
инфо("Завершено");
зачисть();

}