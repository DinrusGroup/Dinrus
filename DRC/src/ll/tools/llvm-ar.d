module llvmAr;
import common, ll.Target;

extern (C){
цел ЛЛВхоФункцЛЛАр(in ткст0* argv);
ткст[] дайАргиКС();
}


ткст ПомАр = "
ОБЗОР: Архиватор LLVM (llvm-ar)

ИСПОЛЬЗОВАНИЕ: llvm-ar [опции] [-]<операция>[модификаторы] [релпоз] [счёт] <архив> [файлы]
llvm-ar -M [<mri-script]

ОПЦИИ:
--format              - Формат создаваемого архива
=default            -   дефолт
=gnu                -   gnu
=darwin             -   darwin
=bsd                -   bsd
--plugin=<ткст>     - Игнорируется для совместимости
--help                - Показать доступные опции
--version             - Показать версию этой программы
@<файл>               - Прочесть опции из <файла>

ОПЕРАЦИИ:
d - удалить [файлы] из архива
m - переместить [файлы] в архив
p - вывести [файлы], найденные в архиве
q - быстро добавить [файлы] к архиву
r - заменить или вставить [файлы] в архив
s - действовать как ranlib
t - показать содержимое архива
x - извлечь [файлы] из архива

МОДИФИКАТОРЫ:
[a] - поместить [файлы] после [релпоз]
[b] - поместить [файлы] перед [релпоз] (то же, что и [i])
[c] - не предупреждать, если нужно создать архив
[D] - использовать ноль для штампов времени и uids/gids (дефолт)
[i] - поместить [файлы] перед [релпоз] (то же, что и [b])
[l] - игнорируется для совместимости
[L] - добавить содержимое архива
[N] - использовать [счёт] экземпляров имени
[o] - сохранять оригинальные даты
[P] - при сверке использовать полные имена (implied for thin archives)
[s] - создать индексный указатель архива (cf. ranlib)
[S] - не строить таблицу символов
[T] - создать тонкий архив
[u] - обновить только [файлы] более новые, чем в архиве
[U] - использовать актуальный штамп времени и uids/gids
[v] - подробно излагать о предпринятых действиях
";

цел main(ткст[]) 
{
	ЛЛНициализуйВсеИнфОЦели();
	ЛЛНициализуйВсеЦелевыеМК();
	ЛЛНициализуйВсеАсмПарсеры();

	ткст[] арги = дайАргиКС();
	ткст0 марги =  cast(ткст0) арги[0..$];
			//выдай("Вызывается ЛЛВМ-АР").нс;
			if(арги.length < 2)
			{
				выдай(ПомАр).нс;
				return ЛЛВхоФункцЛЛАр(&марги);
			}
			else if(арги.length >= 3) return ЛЛВхоФункцЛЛАр(&марги);
		
}
