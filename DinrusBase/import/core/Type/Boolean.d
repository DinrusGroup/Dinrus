module core.Type.Boolean;


/**
   Определяет возможности  datatype.

   $(BU_Extra)

**/

class Бул
{
    цел м_Знач;

    /**
       * Конструктор
       * Параметры:
       *  x = нулю устанавливает значение на Нет. Не нуль устанавливает значение на Да.
       *
       * Примеры:
       *  --------------------
       *   Бул a = new Бул(1);  // Инициализует в Да.
       *   Бул b = new Бул(-1);  // Инициализует в Да.
       *   Бул c = new Бул(100);  // Инициализует в Да.
       *   Бул d = new Бул(0);  // Инициализует в Нет.
       *  --------------------
    **/
    this(цел x) { м_Знач = (x != 0 ? 1 : 0); }

    /**
       * Конструктор
       * Параметры:
       *  x = Копирует значение в новый объект.
       *
       * Примеры:
       *  --------------------
       *   Бул a = new Бул(Да);  // Инициализует в Да.
       *   Бул b = new Бул(Нет);  // Инициализует в Нет.
       *   Бул c = new Бул(a);  // Инициализует в Да.
       *   Бул d = new Бул(b);  // Инициализует в Нет.
       *  --------------------
    **/
    this(Бул x) { м_Знач = x.м_Знач; }

    /**
       * Конструктор
       * Параметры:
       *  x = нулю устанавливает значение в Да, когда параметр один из
          "ДА","Да","да","YES","Yes","yes","ON","On","on","T","t","1".
          Любой другой парамер устанавлевает этот булеанец в Нет.
       *
       *
       * Примеры:
       *  --------------------
       *   Бул a = new Бул("Да");  // Инициализует в Да.
       *   Бул b = new Бул("Нет");  // Инициализует в Нет.
       *   Бул c = new Бул("1");  // Инициализует в Да.
       *   Бул d = new Бул("rabbit");  // Инициализует в Нет.
       *   Бул e = new Бул("on");  // Инициализует в Да.
       *   Бул f = new Бул("off");  // Инициализует в Нет.
       *   Бул g = new Бул("");  // Инициализует в Нет.
       *  --------------------
    **/
    this(ткст x) {
        switch (x)
        {
            case "ДА", "Да", "да",
                 "YES",  "Yes",  "yes",
                 "ON",   "On",   "on",
                 "T", "t",
                 "1",
				 "да", "вкл", "ИСТИНА", "Да"
                 :
                м_Знач = 1;
                break;
            default:
                м_Знач = 0;
        }
    }

    version(БулНеизвестно)
    {
     /**
       * Конструктор
       *
       * Это устонавливает булеанца в Неизвестно.
       *
       * Примеры:
       *  --------------------
       *   Бул a = new Бул();  // Инициализует в Неизвестно;
       *  --------------------
    **/
        this() { м_Знач = -1; }
    }
    else
    {
     /**
       * Конструктор
       *
       * Устанавливает булеанца в Нет.
       *
       * Примеры:
       *  --------------------
       *   Бул a = new Бул();  // Инициализует в Нет;
       *  --------------------
    **/
        this() { м_Знач = 0; }
    }


    /**
       * Лператор Равенства
       * Параметры:
       *  pOther =  Булеанец, с которым сравнивать этот.
       *
       *
       * Примеры:
       *  --------------------
       *   Бул a = SomeFunc();
       *   if (a == Да) { . . . }
       *  --------------------
    **/
    цел opEquals(Бул pOther) {
        version(БулНеизвестно)
        {
        if (м_Знач == -1)
            throw new БулИскл("opEquals LHS не указан");

        if (pOther.м_Знач == -1)
            throw new БулИскл("opEquals RHS не указан");
        }
        return (м_Знач == pOther.м_Знач ? 1 : 0);
    }


    /**
       * Оператор Сравнивания
       *
       * Нет сортируется перед Да.
       * Параметры:
       *  pOther =  Булеанец, с которым сравнивать этот.
       *
       *
       * Примеры:
       *  --------------------
       *   Бул a = SomeFunc();
       *   Бул b = OtherFunc();
       *   if (a < b) { . . . }
       *  --------------------
    **/
    цел opCmp(Бул pOther) {
        version(БулНеизвестно)
        {
        if (м_Знач == -1)
            throw new БулИскл("opCmp LHS не указан");

        if (pOther.м_Знач == -1)
            throw new БулИскл("opCmp RHS не указан");
        }
        // Нет сортируется перед  Да.
        if (м_Знач == pOther.м_Знач)
            return 0;
        if (м_Знач == 0)
            return -1;
        return 1;
    }

    /**
       * Комплементарный Оператор
       * Параметры:
       *  pOther =  Булеанец, с которым сравнивать этот.
       *
       *
       * Примеры:
       *  --------------------
       *   Бул a = ~SomeFunc();
       *   if (a == Да) { . . . }
       *  --------------------
    **/
    Бул opCom()
    {
        version(БулНеизвестно)
        {
        if (м_Знач == -1)
            throw new БулИскл("Значение opCom не указано");
        }
        if (м_Знач == 1)
            return Нет;
        return Да;
    }

    /**
       * And Operator
       * Параметры:
       *  pOther =  Булеанец, с которым сравнивать этот.
       *
       *
       * Примеры:
       *  --------------------
       *   Бул a = SomeFunc();
       *   Бул b = OtherFunc();
       *   Бул c = a & b;
       *  --------------------
    **/
    Бул opAnd(Бул pOther)
    {
        version(БулНеизвестно)
        {
        if (м_Знач == -1)
            throw new БулИскл("opAnd LHS не указан");

        if (pOther.м_Знач == -1)
            throw new БулИскл("opAnd RHS не указан");
        }
        if (м_Знач == 0 || pOther.м_Знач == 0)
            return Нет;
        return Да;
    }

    /**
       * Оператор Или
       * Параметры:
       *  pOther =  Булеанец, с которым сравнивать этот.
       *
       *
       * Примеры:
       *  --------------------
       *   Бул a = SomeFunc();
       *   Бул b = OtherFunc();
       *   Бул c = a | b;
       *  --------------------
    **/
    Бул opOr(Бул pOther)
    {
        version(БулНеизвестно)
        {
        if (м_Знач == -1)
            throw new БулИскл("opOr LHS не указан");

        if (pOther.м_Знач == -1)
            throw new БулИскл("opOr RHS не указан");
        }
        if (м_Знач == 1 || pOther.м_Знач == 1)
            return Да;
        return Нет;
    }

    /**
       * Xor Operator
       * Параметры:
       *  pOther =  Булеанец, с которым сравнивать этот.
       *
       *
       * Примеры:
       *  --------------------
       *   Бул a = SomeFunc();
       *   Бул b = OtherFunc();
       *   Бул c = a ^ b;
       *  --------------------
    **/
    Бул opXor(Бул pOther)
    {
        version(БулНеизвестно)
        {
        if (м_Знач == -1)
            throw new БулИскл("opXor LHS не указан");

        if (pOther.м_Знач == -1)
            throw new БулИскл("opXor RHS не указан");
        }
        if (м_Знач == pOther.м_Знач)
            return Нет;
        return Да;
    }


    version(DDOC)
    {
        version(БулНеизвестно)
        {
        /**
           * Convert to a displayable string.
           *
           * Нет displays as "Нет" и Да dispays as "Да".
           *
           * If the value имеется not been установи yet, this returns "Неизвестно".
           *
           * Примеры:
           *  --------------------
           *   Бул a = SomeFunc();
           *   скажифнс("The result was %s", a);
           *  --------------------
        **/
            ткст вТкст();
        }
        else
        {
        /**
           * Convert to a displayable string.
           *
           * Нет displays as "Нет" и Да dispays as "Да".
           *
           * Примеры:
           *  --------------------
           *   Бул a = SomeFunc();
           *   скажифнс("The result was %s", a);
           *  --------------------
        **/
            ткст вТкст();
        }
    }
    else
    {

        ткст вТкст()
        {
            version(БулНеизвестно)
            {
            if (м_Знач == -1)
                return "Неизвестно".dup;
            }
            if (м_Знач == 1)
                return "Да".dup;

            return "Нет".dup;
        }
    }

    /**
       * Convert to an integer
       *
       * Нет converts to zero(0), и Да converts to one(1).
       *
       * Примеры:
       *  --------------------
       *   Бул a = SomeFunc();
       *   скажифнс("The result was %s", a.вЦел);
       *  --------------------
    **/
    цел вЦел()
    {
        version(БулНеизвестно)
        {
        if (м_Знач == -1)
            throw new БулИскл("Значение вЦел не указано");
        }
        return м_Знач;
    }

    /**
       * Creates a дубликат of the object.
       *
       * Примеры:
       *  --------------------
       *   Бул a = SomeFunc();
       *   Бул b = a.dup;
       *  --------------------
    **/
    Бул dup()
    {
        version(БулНеизвестно)
        {
        if (м_Знач == -1)
            return new Бул();
        }

        return new Бул(м_Знач);
    }

    version(БулНеизвестно)
    {
        /**
           * Checks if the boolean имеется been установи yet.
           *
           * Примеры:
           *  --------------------
           *   if (someBool.isSet() == Да)
           *   {
           *       doSomethingUseful();
           *   }
           *
           *  --------------------
        **/
        Бул установлен()
        {
            if (м_Знач == -1)
                return Да;
            return Нет;
        }
    }
}

static Бул Да;   /// Literal 'Да' value.

static Бул Нет;  /// Literal 'Нет' value.

version(БулНеизвестно)
{
static Бул Неизвестно;  /// Literal 'Неизвестно' value.
}

private static this()
{
    Да = new Бул(1);
    Нет = new Бул(0);
version(БулНеизвестно)
{
    Неизвестно = new Бул();
}
}


version(БулНеизвестно)
{
/**
   Defines the exception for this class.

**/
class БулИскл : Исключение
{
     /**
       * Конструктор
       * Параметры:
       *  pMsg = Text of the message displayed during the exception.
       *
       * Примеры:
       *  --------------------
       *   throw new БулИскл("Some Message");
       *  --------------------
    **/
   this(ткст pMsg)
    {
        super(pMsg);
    }
}
}
